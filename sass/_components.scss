// LOGO
.logo {
  height: 3.25rem;
  margin-left: 2rem;
}

// SEARCH BOX
.search {
  flex: 0 0 40%;

  // Nested flexbox - Flex item becoming a flex container
  display: flex;
  align-items: center; // Align items for cross axis
  justify-content: center; // Justify content for main axis

  &__input {
    // Input does not inherit automatically. Use inherit to inherit from parent (header in this case)
    font-family: inherit;
    font-size: inherit;
    color: inherit;
    background-color: var(--color-grey-light-2);
    border: none;
    padding: .7rem 2rem;
    border-radius: 100px;
    width: 90%; // Not 100% so we can expand on focus
    transition: all .2s; // Transition for focus effect
    margin-right: -3.5rem; // Use negative margin to overlap the button (icon)

    &:focus {
      // Increase from 90 to 100% and darken on focus (when clicked to type)
      outline: none;
      width: 100%;
      background-color: var(--color-grey-light-3);
    }

    // Style the placeholder text using webkit speudo placeholder element
    &::-webkit-input-placeholder {
      // Placeholder font size inherits from input font size
      font-weight: 100;
      color: var(--color-grey-light-4);
    }
  }

  // Set background color of button to match input when input is focused
  &__input:focus + &__button {
    background-color: var(--color-grey-light-3);
  }

  &__button {
    border: none;
    background-color: var(--color-grey-light-2);
    cursor: pointer;

    &:focus {
      // When hovered, remove outline
      outline: none;
    }

    &:active {
      // When clicked, move down slightly for click effect
      transform: translateY(2px);
    }
  }

  &__icon {
    height: 2rem;
    width: 2rem;
    fill: var(--color-grey-dark-3); // Use fill with SVGs to change color
  }
}

// USER NAVIGATION
.user-nav {
  display: flex;
  align-items: center;
  align-self: stretch; // Align self to stretch to full height of parent container (header)

  // Select user-nav and all of its direct children
  & > * {
    display: flex;
    align-items: center;
    padding: 0 2rem;
    cursor: pointer;
    height: 100%; // Set height to 100% to match height of parent container (header) on hover

    &:hover {
      background-color: var(--color-grey-light-2);
    }
  }

  &__icon-box {
    position: relative; // Parent element of notification with position absolute requires position relative
  }

  &__icon {
    height: 2.25rem;
    width: 2.25rem;
    fill: var(--color-grey-dark-2);
  }

  &__notification {
    font-size: .8rem;
    height: 1.75rem;
    width: 1.75rem;
    border-radius: 50%;
    background-color: var(--color-primary);
    color: var(--color-white);
    position: absolute; // To position notification inside icon box
    top: 1.5rem;
    right: 1.1rem;
    // Use flexbox to center text (number) inside notification
    display: flex;
    align-items: center;
    justify-content: center;
  }

  &__user-photo {
    height: 3.75rem;
    border-radius: 50%;
    margin-right: 1rem;
  }
}

// SIDE NAVIGATION
.side-nav {
  font-size: 1.4rem;
  list-style: none; // remove bullets
  margin-top: 3.5rem;

  &__item {
    position: relative; // Required for before pseudo element positioning

    &:not(:last-child) { // Select all items except the last one
      margin-bottom: 1rem;
    }
  }

  // Create a before pseudo element to create a line on the left side of the list item
  &__item::before {
    content: ""; // Set content to empty string to create pseudo element
    position: absolute;
    top: 0;
    left: 0;
    height: 100%; // Exactly same hieght as list item (parent)
    width: 3px;
    background-color: var(--color-primary);
    transform: scaleY(0); // Initially scale to 0 to hide. Use scaleY to scale vertically
    transform-origin: center; // Scale from center (this is the default)
    // Transition for animation effects
    transition: transform .2s, // First transform for vertical line
                width .4s cubic-bezier(1,0,0,1) .2s; // Second transform for 100% width of line. Use cubic-bezier and delay the width transition by .2s
                background-color: .1s // Third transform for background color change on click

  }

  // On hover, scale the pseudo element to show it
  &__item:hover:before,
  // Style the --active to show the background color and line with before pseudo element
  &__item--active:before {
    transform: scaleY(1); // Scale the pseudo element on hover using scaleY to make it grow vertically

    width: 100%; // Make the line full width to match the width of the list item
  }

  // Use active::before to style the button when it's being clicked
  &__item:active::before {
    background-color: var(--color-primary-light);
  }

  &__link:link,
  &__link:visited {
    color: var(--color-grey-light-1);
    text-decoration: none; // remove underline
    text-transform: uppercase;
    display: block; // Make link full width
    padding: 1.5rem 3rem;
    position: relative; // Required for z-index to work
    z-index: 10; // Set z-index to 10 to make sure it's on top of the pseudo element

    // Align Icon and title
    display: flex;
    align-items: center;
  }

  &__icon {
    width: 1.75rem;
    height: 1.75rem;
    margin-right: 2rem;
    fill: currentColor; // Use currentColor to inherit color from parent
  }
}

// LEGAL TEXT
.legal {
  font-size: 1.2rem;
  color: var(--color-grey-light-4);
  text-align: center;
  padding: 2.5rem;
}


// GALLERY
.gallery {
  display: flex;

  &__photo {
    width: 100%; // Always give images a width or height
    display: block // To avoid a whitespace issue under the image
  }
}

// HOTEL OVERVIEW
.overview {
  display: flex;
  align-items: center; // Align items for cross axis
  border-bottom: var(--border);

  &__heading {
    font-size: 2.25rem;
    font-weight: 300;
    text-transform: uppercase;
    letter-spacing: 1px;
    padding: 1.5rem 3rem;
  }

  &__stars {
    margin-right: auto; // Push stars to the left
    display: flex; // Use flexbox to remove default whitespace under svg elements
  }

  &__icon-star,
  &__icon-location {
    width: 1.75rem;
    height: 1.75rem;
    fill: var(--color-primary);
  }

  &__location {
    font-size: 1.2rem;
    display: flex;
    align-items: center;
  }

  &__icon-location {
    margin-right: .5rem;
  }

  &__rating {
    background-color: var(--color-primary);
    color: var(--color-white);
    margin-left: 3rem;
    align-self: stretch; // Override align-items: center to stretch only this container to the full height of its parent container
    padding: 0 2.25rem;
    // Align the text inside the rating container
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
  }

  &__rating-average {
    font-size: 2.25rem;
    font-weight: 300;
  }

  &__rating-count {
    font-size: .8rem;
    text-transform: uppercase;
  }
}


// BUTTON
.btn-inline {
  border: none;
  color: var(--color-primary);
  font-size: inherit;
  border-bottom: 1px solid currentColor; // Use currentColor to inherit color from parent, as well as the color on hover
  padding-bottom: 2px; // Padding between text and border-bottom (underline)
  display: inline-block; // Make the button inline
  background-color: transparent; // Remove background color
  cursor: pointer;
  transition: all .2s; // Transition for hover effect

  & span { // Span for arrow next to show all button
    margin-left: 3px;
  }
  &:hover {
    color: var(--color-grey-dark-1);

    span {
      margin-left: 8px; // Increase margin to move arrow further
      transform: margin-left .2s; // Transition for arrow movement
    }
  }

  &:focus {
    outline: none;
    animation: pulsate 1s infinite; // Use animation for pulsate effect, 1s duration, infinite loop
  }
}

// PULSE ANIMATION -  Normal, scale up with box shadow, then back to normal
@keyframes pulsate {
  0% {
    transform: scale(1);
    box-shadow: none;
  }

  50% {
    transform: scale(1.05);
    box-shadow: 0 1rem 4rem rgba(var(--color-black), .25);
  }

  100% {
    transform: scale(1);
    box-shadow: none;
  }
}

// PARAGRAPH
// Use last-of-type to remove margin bottom from the last paragraph (last child won't work because it will select the last child of the parent container)
.paragraph:not(:last-of-type) {
  margin-bottom: 3rem;
}

// LIST
.list {
  list-style: none;
  margin: 3rem 0;
  padding: 3rem 0;
  border-top: var(--border);
  border-bottom: var(--border);

  // Use flexbox to align list items in two columns
  display: flex;
  flex-wrap: wrap; // Wrap the list items to allow elements to wrap to the next line

  &__item {
    flex: 0 0 50%; // Set flex to 50% to allow 2 items per row
    margin-bottom: .7rem;
  }

  &__item::before {
    content: ""; // Set content to empty string to create pseudo element
    display: inline-block; // Display as inline block to allow margin and padding and be on the same line
    height: 1rem;
    width: 1rem;
    margin-right: .7rem;

    // Older browsers
    // background-image: url(/img/chevron-thin-right.svg);
    // background-size: cover;

    // Newer browsers - masks (defines an area where we can look through an element and see what's behind it)
    // Set background to a solid color
    background-color: var(--color-primary);
    // Use mask-image to set the image
    -webkit-mask-image: url(/img/chevron-thin-right.svg);
    -webkit-mask-size: cover; // Similar to background size
    mask-image: url(/img/chevron-thin-right.svg);
    mask-size: cover; // Similar to background size
  }
}

// RECOMMEND
.recommend {
  font-size: 1.3rem;
  color: var(--color-grey-dark-3);
  display: flex;
  align-items: center;
  justify-content: space-between;

  &__count {
    // margin-right: auto can also be used here instead of justify-content: space-between on the parent div
  }

  &__friends {
  }

  &__photo {
    box-sizing: content-box; // Set back to default so the border is not included in the width / is around the image instead of inside and effecting its size
    height: 4rem;
    weight: 4rem;
    border-radius: 50%;
    border: 3px solid var(--color-white);

    // Make the photos overlap
    &:not(:last-child) {
      margin-right: -1.5rem;
    }
  }
}

// REVIEWS
.review {
  background-color: var(--color-white);
  box-shadow: (--shadow-light);
  padding: 3rem;
  margin-bottom: 3.5rem;
  position: relative; // For relative positioning of the before pseudo element
  overflow: hidden; // Hide the overflow of the pseudo element (before quotation mark)

  &__text {
    margin-bottom: 2rem;
    z-index: 10; // Set z-index to 10 to make sure it's on top of the pseudo element (before quotation mark)
    position: relative; // For z-index to work
  }

  &__user {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  &__photo {
    height: 4.5rem;
    width: 4.5rem;
    border-radius: 50%;
    margin-right: 1.5rem;
  }

  &__user-box {
    margin-right: auto;
  }

  &__user-name {
    font-size: 1.1rem;
    font-weight: 600;
    text-transform: uppercase;
    margin-bottom: .4rem;
  }

  &__user-date {
    font-size: 1rem;
    color: var(--color-grey-dark-3);
  }

  &__rating {
    color: var(--color-primary);
    font-size: 2.2rem;
    font-weight: 300;
  }

  &::before {
    content: "\201C"; // ISO number for html entity to use in CSS
    position: absolute;
    top: -2.75rem; // Up
    left: -1rem; // Left
    line-height: 1; // Line height to 1 to make sure the quote is vertically centered
    font-size: 20rem;
    color: var(--color-grey-light-2);
    font-family: sans-serif; // Use sans-serif font
    z-index: 1; // Small z-index to make sure it's behind the text
  }
}
